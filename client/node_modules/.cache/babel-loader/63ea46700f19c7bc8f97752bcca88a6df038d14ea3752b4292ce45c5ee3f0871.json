{"ast":null,"code":"import api from './api.service.js';\n\n// Questions API endpoints\nconst QUESTIONS_PATH = '/questions';\n\n// Get all questions (admin only)\nexport const getAllQuestions = async () => {\n  try {\n    const response = await api.get(QUESTIONS_PATH);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Get question by ID (admin only)\nexport const getQuestionById = async questionId => {\n  try {\n    const response = await api.get(`${QUESTIONS_PATH}/${questionId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Create question (admin only)\nexport const createQuestion = async questionData => {\n  try {\n    const response = await api.post(QUESTIONS_PATH, questionData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Update question (admin only)\nexport const updateQuestion = async (questionId, questionData) => {\n  try {\n    const response = await api.put(`${QUESTIONS_PATH}/${questionId}`, questionData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Delete question (admin only)\nexport const deleteQuestion = async questionId => {\n  try {\n    const response = await api.delete(`${QUESTIONS_PATH}/${questionId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["api","QUESTIONS_PATH","getAllQuestions","response","get","data","error","getQuestionById","questionId","createQuestion","questionData","post","updateQuestion","put","deleteQuestion","delete"],"sources":["/Users/mattgaudie/Documents/Projects/wizctf/client/src/services/question.service.js"],"sourcesContent":["import api from './api.service.js';\n\n// Questions API endpoints\nconst QUESTIONS_PATH = '/questions';\n\n// Get all questions (admin only)\nexport const getAllQuestions = async () => {\n  try {\n    const response = await api.get(QUESTIONS_PATH);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Get question by ID (admin only)\nexport const getQuestionById = async (questionId) => {\n  try {\n    const response = await api.get(`${QUESTIONS_PATH}/${questionId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Create question (admin only)\nexport const createQuestion = async (questionData) => {\n  try {\n    const response = await api.post(QUESTIONS_PATH, questionData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Update question (admin only)\nexport const updateQuestion = async (questionId, questionData) => {\n  try {\n    const response = await api.put(`${QUESTIONS_PATH}/${questionId}`, questionData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Delete question (admin only)\nexport const deleteQuestion = async (questionId) => {\n  try {\n    const response = await api.delete(`${QUESTIONS_PATH}/${questionId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,kBAAkB;;AAElC;AACA,MAAMC,cAAc,GAAG,YAAY;;AAEnC;AACA,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAACH,cAAc,CAAC;IAC9C,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,eAAe,GAAG,MAAOC,UAAU,IAAK;EACnD,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,GAAGH,cAAc,IAAIO,UAAU,EAAE,CAAC;IACjE,OAAOL,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,cAAc,GAAG,MAAOC,YAAY,IAAK;EACpD,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMH,GAAG,CAACW,IAAI,CAACV,cAAc,EAAES,YAAY,CAAC;IAC7D,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,cAAc,GAAG,MAAAA,CAAOJ,UAAU,EAAEE,YAAY,KAAK;EAChE,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMH,GAAG,CAACa,GAAG,CAAC,GAAGZ,cAAc,IAAIO,UAAU,EAAE,EAAEE,YAAY,CAAC;IAC/E,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,cAAc,GAAG,MAAON,UAAU,IAAK;EAClD,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMH,GAAG,CAACe,MAAM,CAAC,GAAGd,cAAc,IAAIO,UAAU,EAAE,CAAC;IACpE,OAAOL,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}