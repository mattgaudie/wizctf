{"ast":null,"code":"var _jsxFileName = \"/Users/mattgaudie/Documents/Projects/wizctf/client/src/pages/EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext.js';\nimport MainLayout from '../components/layout/MainLayout.js';\nimport './DashboardPage.css';\nimport './EventsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    isAuthenticated,\n    user,\n    loading: authLoading\n  } = useAuth();\n  const navigate = useNavigate();\n  const [event, setEvent] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentAnswers, setCurrentAnswers] = useState({});\n  useEffect(() => {\n    // Redirect if not authenticated\n    if (!authLoading && !isAuthenticated) {\n      navigate('/login');\n    } else {\n      fetchEventDetails();\n    }\n  }, [isAuthenticated, authLoading, navigate, id]);\n  const fetchEventDetails = async () => {\n    try {\n      setLoading(true);\n\n      // Get event details\n      const eventResponse = await fetch(`/api/events/${id}`, {\n        headers: {\n          'x-auth-token': localStorage.getItem('token')\n        }\n      });\n      if (!eventResponse.ok) {\n        if (eventResponse.status === 404) {\n          throw new Error('Event not found');\n        } else if (eventResponse.status === 403) {\n          throw new Error('You do not have access to this event');\n        } else {\n          throw new Error('Failed to fetch event details');\n        }\n      }\n      const eventData = await eventResponse.json();\n      setEvent(eventData);\n\n      // Get questions for this event's question set\n      if (eventData.questionSet) {\n        const questionsResponse = await fetch(`/api/questionSets/${eventData.questionSet._id}/questions`, {\n          headers: {\n            'x-auth-token': localStorage.getItem('token')\n          }\n        });\n        if (!questionsResponse.ok) {\n          throw new Error('Failed to fetch questions');\n        }\n        const questionsData = await questionsResponse.json();\n        setQuestions(questionsData);\n      }\n    } catch (err) {\n      setError(err.message || 'An error occurred while fetching event data');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAnswerChange = (questionId, answer) => {\n    setCurrentAnswers({\n      ...currentAnswers,\n      [questionId]: answer\n    });\n  };\n  const handleSubmitAnswer = async questionId => {\n    try {\n      const answer = currentAnswers[questionId];\n      if (!answer || !answer.trim()) {\n        alert('Please enter an answer');\n        return;\n      }\n      const response = await fetch(`/api/events/${id}/questions/${questionId}/answer`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-auth-token': localStorage.getItem('token')\n        },\n        body: JSON.stringify({\n          answer\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        alert(data.msg || 'Failed to submit answer');\n        return;\n      }\n\n      // Clear the answer input and show feedback\n      setCurrentAnswers({\n        ...currentAnswers,\n        [questionId]: ''\n      });\n      if (data.correct) {\n        alert('Correct answer!');\n      } else {\n        alert('Incorrect answer. Try again!');\n      }\n\n      // Refresh questions to update status\n      fetchEventDetails();\n    } catch (err) {\n      alert('An error occurred. Please try again.');\n      console.error(err);\n    }\n  };\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-loading\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Event Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => navigate('/events'),\n          children: \"Back to Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  }\n  if (!event) {\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Event Not Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The event you're looking for doesn't exist or you don't have access to it.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => navigate('/events'),\n          children: \"Back to Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: event.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), \" \", formatDate(event.eventDate), \"\\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Duration:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), \" \", event.duration, \" minutes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), event.description && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card dashboard-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: event.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card dashboard-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), questions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No questions available for this event.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"questions-list\",\n            children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Question \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: question.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this), question.imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-image\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: question.imageUrl,\n                  alt: `Question ${index + 1}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 23\n              }, this), question.options && question.options.length > 0 ?\n              /*#__PURE__*/\n              // Multiple choice question\n              _jsxDEV(\"div\", {\n                className: \"options-list\",\n                children: question.options.map((option, optIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"option-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    id: `option-${question._id}-${optIndex}`,\n                    name: `question-${question._id}`,\n                    value: option,\n                    checked: currentAnswers[question._id] === option,\n                    onChange: () => handleAnswerChange(question._id, option)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: `option-${question._id}-${optIndex}`,\n                    children: option\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 29\n                  }, this)]\n                }, optIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 23\n              }, this) :\n              /*#__PURE__*/\n              // Free text answer\n              _jsxDEV(\"div\", {\n                className: \"answer-input\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Enter your answer\",\n                  value: currentAnswers[question._id] || '',\n                  onChange: e => handleAnswerChange(question._id, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-small\",\n                onClick: () => handleSubmitAnswer(question._id),\n                children: \"Submit Answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 21\n              }, this)]\n            }, question._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_s(EventDetailPage, \"uBP/6UVHM+BL3nOv4TMQQUrxg5c=\", false, function () {\n  return [useParams, useAuth, useNavigate];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useAuth","MainLayout","jsxDEV","_jsxDEV","EventDetailPage","_s","id","isAuthenticated","user","loading","authLoading","navigate","event","setEvent","questions","setQuestions","setLoading","error","setError","currentAnswers","setCurrentAnswers","fetchEventDetails","eventResponse","fetch","headers","localStorage","getItem","ok","status","Error","eventData","json","questionSet","questionsResponse","_id","questionsData","err","message","console","handleAnswerChange","questionId","answer","handleSubmitAnswer","trim","alert","response","method","body","JSON","stringify","data","msg","correct","formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","eventDate","duration","description","length","map","question","index","text","imageUrl","src","alt","option","optIndex","type","value","checked","onChange","htmlFor","placeholder","e","target","_c","$RefreshReg$"],"sources":["/Users/mattgaudie/Documents/Projects/wizctf/client/src/pages/EventDetailPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext.js';\nimport MainLayout from '../components/layout/MainLayout.js';\nimport './DashboardPage.css';\nimport './EventsPage.css';\n\nconst EventDetailPage = () => {\n  const { id } = useParams();\n  const { isAuthenticated, user, loading: authLoading } = useAuth();\n  const navigate = useNavigate();\n  \n  const [event, setEvent] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentAnswers, setCurrentAnswers] = useState({});\n\n  useEffect(() => {\n    // Redirect if not authenticated\n    if (!authLoading && !isAuthenticated) {\n      navigate('/login');\n    } else {\n      fetchEventDetails();\n    }\n  }, [isAuthenticated, authLoading, navigate, id]);\n\n  const fetchEventDetails = async () => {\n    try {\n      setLoading(true);\n      \n      // Get event details\n      const eventResponse = await fetch(`/api/events/${id}`, {\n        headers: {\n          'x-auth-token': localStorage.getItem('token')\n        }\n      });\n      \n      if (!eventResponse.ok) {\n        if (eventResponse.status === 404) {\n          throw new Error('Event not found');\n        } else if (eventResponse.status === 403) {\n          throw new Error('You do not have access to this event');\n        } else {\n          throw new Error('Failed to fetch event details');\n        }\n      }\n      \n      const eventData = await eventResponse.json();\n      setEvent(eventData);\n      \n      // Get questions for this event's question set\n      if (eventData.questionSet) {\n        const questionsResponse = await fetch(`/api/questionSets/${eventData.questionSet._id}/questions`, {\n          headers: {\n            'x-auth-token': localStorage.getItem('token')\n          }\n        });\n        \n        if (!questionsResponse.ok) {\n          throw new Error('Failed to fetch questions');\n        }\n        \n        const questionsData = await questionsResponse.json();\n        setQuestions(questionsData);\n      }\n    } catch (err) {\n      setError(err.message || 'An error occurred while fetching event data');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAnswerChange = (questionId, answer) => {\n    setCurrentAnswers({\n      ...currentAnswers,\n      [questionId]: answer\n    });\n  };\n\n  const handleSubmitAnswer = async (questionId) => {\n    try {\n      const answer = currentAnswers[questionId];\n      \n      if (!answer || !answer.trim()) {\n        alert('Please enter an answer');\n        return;\n      }\n      \n      const response = await fetch(`/api/events/${id}/questions/${questionId}/answer`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-auth-token': localStorage.getItem('token')\n        },\n        body: JSON.stringify({ answer })\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        alert(data.msg || 'Failed to submit answer');\n        return;\n      }\n      \n      // Clear the answer input and show feedback\n      setCurrentAnswers({\n        ...currentAnswers,\n        [questionId]: ''\n      });\n      \n      if (data.correct) {\n        alert('Correct answer!');\n      } else {\n        alert('Incorrect answer. Try again!');\n      }\n      \n      // Refresh questions to update status\n      fetchEventDetails();\n    } catch (err) {\n      alert('An error occurred. Please try again.');\n      console.error(err);\n    }\n  };\n\n  const formatDate = (dateString) => {\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  if (loading) {\n    return (\n      <MainLayout>\n        <div className=\"dashboard-loading\">\n          <h2>Loading...</h2>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  if (error) {\n    return (\n      <MainLayout>\n        <div className=\"dashboard-container\">\n          <div className=\"dashboard-header\">\n            <h1>Event Error</h1>\n          </div>\n          <div className=\"alert alert-danger\">\n            {error}\n          </div>\n          <button className=\"btn\" onClick={() => navigate('/events')}>\n            Back to Events\n          </button>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  if (!event) {\n    return (\n      <MainLayout>\n        <div className=\"dashboard-container\">\n          <div className=\"dashboard-header\">\n            <h1>Event Not Found</h1>\n          </div>\n          <p>The event you're looking for doesn't exist or you don't have access to it.</p>\n          <button className=\"btn\" onClick={() => navigate('/events')}>\n            Back to Events\n          </button>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  return (\n    <MainLayout>\n      <div className=\"dashboard-container\">\n        <div className=\"dashboard-header\">\n          <h1>{event.name}</h1>\n          <p>\n            <strong>Date:</strong> {formatDate(event.eventDate)}\n            &nbsp;|&nbsp;\n            <strong>Duration:</strong> {event.duration} minutes\n          </p>\n        </div>\n\n        {event.description && (\n          <div className=\"card dashboard-card\">\n            <h2>Description</h2>\n            <p>{event.description}</p>\n          </div>\n        )}\n\n        <div className=\"dashboard-content\">\n          <div className=\"card dashboard-card\">\n            <h2>Questions</h2>\n            {questions.length === 0 ? (\n              <p>No questions available for this event.</p>\n            ) : (\n              <div className=\"questions-list\">\n                {questions.map((question, index) => (\n                  <div key={question._id} className=\"question-item\">\n                    <h3>Question {index + 1}</h3>\n                    <p>{question.text}</p>\n                    \n                    {question.imageUrl && (\n                      <div className=\"question-image\">\n                        <img src={question.imageUrl} alt={`Question ${index + 1}`} />\n                      </div>\n                    )}\n                    \n                    {question.options && question.options.length > 0 ? (\n                      // Multiple choice question\n                      <div className=\"options-list\">\n                        {question.options.map((option, optIndex) => (\n                          <div key={optIndex} className=\"option-item\">\n                            <input\n                              type=\"radio\"\n                              id={`option-${question._id}-${optIndex}`}\n                              name={`question-${question._id}`}\n                              value={option}\n                              checked={currentAnswers[question._id] === option}\n                              onChange={() => handleAnswerChange(question._id, option)}\n                            />\n                            <label htmlFor={`option-${question._id}-${optIndex}`}>\n                              {option}\n                            </label>\n                          </div>\n                        ))}\n                      </div>\n                    ) : (\n                      // Free text answer\n                      <div className=\"answer-input\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"Enter your answer\"\n                          value={currentAnswers[question._id] || ''}\n                          onChange={(e) => handleAnswerChange(question._id, e.target.value)}\n                        />\n                      </div>\n                    )}\n                    \n                    <button \n                      className=\"btn btn-small\"\n                      onClick={() => handleSubmitAnswer(question._id)}\n                    >\n                      Submit Answer\n                    </button>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default EventDetailPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}