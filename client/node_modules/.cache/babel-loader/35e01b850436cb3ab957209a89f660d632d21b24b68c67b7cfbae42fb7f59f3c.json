{"ast":null,"code":"import axios from 'axios';\nimport api from './api.service.js';\n\n// Create auth endpoint - relative path works with proxy in development and production\nconst AUTH_PATH = '/auth';\n\n// Login user\nexport const login = async userData => {\n  try {\n    const response = await axios.post(`/api${AUTH_PATH}/login`, userData);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Register user\nexport const register = async userData => {\n  try {\n    const response = await axios.post(`/api${AUTH_PATH}/register`, userData);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Get current user\nexport const getCurrentUser = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      return null;\n    }\n\n    // Use API instance with auth headers already set\n    const response = await api.get(`${AUTH_PATH}/me`);\n    return response.data;\n  } catch (error) {\n    localStorage.removeItem('token');\n    throw error;\n  }\n};\n\n// Reset password\nexport const resetPassword = async passwordData => {\n  try {\n    const response = await api.put(`${AUTH_PATH}/reset-password`, passwordData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Logout user\nexport const logout = () => {\n  localStorage.removeItem('token');\n};\n\n// Get token from localStorage\nexport const getToken = () => {\n  return localStorage.getItem('token');\n};\n\n// Check if user is authenticated\nexport const isAuthenticated = () => {\n  return !!localStorage.getItem('token');\n};","map":{"version":3,"names":["axios","api","AUTH_PATH","login","userData","response","post","data","token","localStorage","setItem","error","register","getCurrentUser","getItem","get","removeItem","resetPassword","passwordData","put","logout","getToken","isAuthenticated"],"sources":["/Users/mattgaudie/Documents/Projects/wizctf/client/src/services/auth.service.js"],"sourcesContent":["import axios from 'axios';\nimport api from './api.service.js';\n\n// Create auth endpoint - relative path works with proxy in development and production\nconst AUTH_PATH = '/auth';\n\n// Login user\nexport const login = async (userData) => {\n  try {\n    const response = await axios.post(`/api${AUTH_PATH}/login`, userData);\n    \n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    \n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Register user\nexport const register = async (userData) => {\n  try {\n    const response = await axios.post(`/api${AUTH_PATH}/register`, userData);\n    \n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    \n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Get current user\nexport const getCurrentUser = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    \n    if (!token) {\n      return null;\n    }\n    \n    // Use API instance with auth headers already set\n    const response = await api.get(`${AUTH_PATH}/me`);\n    \n    return response.data;\n  } catch (error) {\n    localStorage.removeItem('token');\n    throw error;\n  }\n};\n\n// Reset password\nexport const resetPassword = async (passwordData) => {\n  try {\n    const response = await api.put(`${AUTH_PATH}/reset-password`, passwordData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Logout user\nexport const logout = () => {\n  localStorage.removeItem('token');\n};\n\n// Get token from localStorage\nexport const getToken = () => {\n  return localStorage.getItem('token');\n};\n\n// Check if user is authenticated\nexport const isAuthenticated = () => {\n  return !!localStorage.getItem('token');\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,kBAAkB;;AAElC;AACA,MAAMC,SAAS,GAAG,OAAO;;AAEzB;AACA,OAAO,MAAMC,KAAK,GAAG,MAAOC,QAAQ,IAAK;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,OAAOJ,SAAS,QAAQ,EAAEE,QAAQ,CAAC;IAErE,IAAIC,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;MACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;IACpD;IAEA,OAAOH,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAOR,QAAQ,IAAK;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,OAAOJ,SAAS,WAAW,EAAEE,QAAQ,CAAC;IAExE,IAAIC,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;MACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;IACpD;IAEA,OAAOH,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAML,KAAK,GAAGC,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI,CAACN,KAAK,EAAE;MACV,OAAO,IAAI;IACb;;IAEA;IACA,MAAMH,QAAQ,GAAG,MAAMJ,GAAG,CAACc,GAAG,CAAC,GAAGb,SAAS,KAAK,CAAC;IAEjD,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdF,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChC,MAAML,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,aAAa,GAAG,MAAOC,YAAY,IAAK;EACnD,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMJ,GAAG,CAACkB,GAAG,CAAC,GAAGjB,SAAS,iBAAiB,EAAEgB,YAAY,CAAC;IAC3E,OAAOb,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,MAAM,GAAGA,CAAA,KAAM;EAC1BX,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;AAClC,CAAC;;AAED;AACA,OAAO,MAAMK,QAAQ,GAAGA,CAAA,KAAM;EAC5B,OAAOZ,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC;AACtC,CAAC;;AAED;AACA,OAAO,MAAMQ,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAO,CAAC,CAACb,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC;AACxC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}